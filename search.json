[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"How to contribute","title":"How to contribute","text":"welcome third-party patches, essential advancing science architecture gaia. guidelines ask contributors follow, guidelines ease maintainers’ organizational logistical duties, encouraging development others. contributors agree abide code conduct.","code":""},{"path":"/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"How to contribute","text":"Make sure GitHub account. Clearly describe issue including steps reproduce bug. Discuss change affect gaia, thus whether ’s MAJOR, MINOR, PATCH. Interact project maintainers refine/change/prioritize issue identify branch targeted (see ). Trivial changes comments documentation require creating new issue.","code":""},{"path":"/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"","what":"Making Changes","title":"How to contribute","text":"active development branch titled dev change PATCH, typically based current dev branch; MINOR, next minor release branch; MAJOR, next major release branch. example, writing branches dev, rc1.2 rc2.0, corresponding PATCH-MINOR-MAJOR start points respectively. never accept pull requests main branch. Check unnecessary whitespace git diff --check committing. Make sure commit messages descriptive succinct, describing changed , reference relevant issue number. Make commits logical units. Make sure added necessary tests changes. Tests included root tests directory facilitated using pytest installed development version gaia. See info using pytest : https://docs.pytest.org/en/7.4.x/contents.html Run tests assure nothing else accidentally broken.","code":""},{"path":"/CONTRIBUTING.html","id":"submitting-changes","dir":"","previous_headings":"","what":"Submitting Changes","title":"How to contribute","text":"Submit pull request. copyright code contributed, hereby grant PNNL unlimited license use code version future version gaia. reserve rights code. Somebody else owns copyright code contributed (e.g., employer part work ); authorized owner grant PNNL unlimited license use code version future version gaia, hereby . rights code reserved copyright owner. core team looks Pull Requests regular basis, respond soon possible.","code":""},{"path":"/CONTRIBUTING.html","id":"additional-resources","dir":"","previous_headings":"","what":"Additional Resources","title":"How to contribute","text":"General GitHub documentation GitHub pull request documentation","code":""},{"path":"/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"👋 Welcome!","title":"👋 Welcome!","text":"’re using Discussions place connect members community seek support. hope : Ask questions ’re wondering . Share ideas. Engage community members. Welcome others open-minded. Remember community build together 💪. get started go https://github.com/JGCRI/gaia/discussions just click New Discussions. Relevant discussions can converted issues needed. report bugs issues please see Contribute Page.","code":""},{"path":"/articles/vignette.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"User Guide","text":"gaia designed climate-driven empirical model core, integrated efficient modular structure. architecture streamlines entire workflow, initial climate crop data processing empirical model fitting, yield shock projections future climate scenarios, calculation agricultural productivity changes GCAM. modular design also facilitates comprehensive diagnostic outputs, enhancing tool’s utility researchers policymakers. primary functionality gaia encapsulated yield_impact wrapper function, executes entire workflow climate data processing yield shock estimation. Users can also execute individual functions work main steps process (Figure 1). weighted_climate: Processes CMIP-ISIMIP climate NetCDF data calculates cropland-weighted precipitation temperature country level, differentiated crop type irrigation type. function accepts daily monthly climate data consistent CMIP-ISIMIP NetCDF data format. crop_calendars: Generates crop planting months country crop based crop calendar data Sacks et al., (2020). data_aggregation: Calculates crop growing seasons using climate variables processed weighted_climate crop calendars historical projected periods. function prepares climate yield data subsequent model fitting. yield_regression: Performs regression analysis fitted historical annual crop yields, monthly growing season temperature precipitation, CO2 concentrations, GDP per capita, year. default econometric model applied gaia Waldhoff et al., (2020). User can specify alternative formulas consistent data processed data_aggregation. yield_shock_projection: Projects yield shocks future climate scenarios using fitted model temperature, precipitation, CO2 projections climate scenario. gcam_agprodchange: Remaps country-level yield shocks GCAM-required spatial scales (e.g., region, basin, intersections), based harvested areas, aggregates crops GCAM commodities. function applies projected shocks GCAM scenario agricultural productivity growth rates (unit used project future yields GCAM) creates ready--use XML outputs GCAM.   Figure 1: gaia workflow showing functions corresponding outputs modeling crop yield shocks climate variations using empirical econometric model.","code":""},{"path":"/articles/vignette.html","id":"example-climate-data","dir":"Articles","previous_headings":"","what":"Example Climate Data","title":"User Guide","text":"gaia requires global climate data Inter-Sectoral Impact Model Intercomparison Project (ISIMIP) data formatted similarly ISIMIP data. Additionally, gaia supports climate data aggregated monthly time step. Due large size daily time step climate data, provided example monthly aggregated climate data covering period 2015 2100.","code":""},{"path":"/articles/vignette.html","id":"example-data-1","dir":"Articles","previous_headings":"Example Climate Data","what":"Example Data 1","title":"User Guide","text":"Download example data using instructions . dataset includes historical climate observations future climate projections, already weighted cropland areas provided .txt format. cropland-area-weighted, country-level climate data contains monthly precipitation temperature 26 crop types, distinguishing irrigated rainfed areas.  NOTE! recommend using default historical climate data provided example data 1, based WATCH climate observations (Weedon et al., (2011)). plan adjust assumptions empirical model fitting, can opt use default regression model, pre-fitted WATCH historical climate data, setting argument use_default_coeff = TRUE. loading gaia package, type coef_default view parameters default fitted model..","code":"# load gaia library(gaia)  # Path to the output folder. Change it to your desired location output_dir <- file.path(getwd(), 'gaia_output')  # Cropland-weighted historical and future climate data data_dir <- gaia::get_example_data(   download_url = 'https://zenodo.org/records/13976521/files/weighted_climate.zip?download=1',   data_dir = output_dir )  # Path to the folder that holds cropland-area-weighted precipitation and temperature TXT files # historical climate observation climate_hist_dir <- file.path(data_dir, 'climate_hist') # future projected climate climate_impact_dir <- file.path(data_dir, 'canesm5')"},{"path":"/articles/vignette.html","id":"example-data-2","dir":"Articles","previous_headings":"Example Climate Data","what":"Example Data 2","title":"User Guide","text":"use different climate model scenario, can provide climate data NetCDF format. Note gaia adheres ISIMIP climate data format standard, NetCDF files formatted accordingly. can download example monthly precipitation temperature NetCDF files using code .","code":"# load gaia library(gaia)  # Path to the output folder. Change it to your desired location output_dir <- file.path(getwd(), 'gaia_output')  # Future Climate Data data_dir <- gaia::get_example_data(   download_url = 'https://zenodo.org/records/13976521/files/gaia_example_climate.zip?download=1',   data_dir = output_dir )  # Path to the precipitation and temperature NetCDF files # NOTE: Each variable can have more than one file # projected climate data pr_projection_file <- file.path(data_dir, 'pr_monthly_canesm5_w5e5_gcam-ref_2015_2100.nc') tas_projection_file <- file.path(data_dir, 'tas_monthly_canesm5_w5e5_gcam-ref_2015_2100.nc')"},{"path":[]},{"path":"/articles/vignette.html","id":"example-1","dir":"Articles","previous_headings":"Run gaia!","what":"Example 1","title":"User Guide","text":"example demonstrates complete gaia model workflow, including processing raw climate NetCDF data. Due large size climate dataset, process may take hour. quicker demonstration, please refer Example 2. example uses example data 1 example data 2. can run gaia using single function yield_impact, streamlines entire workflow. detailed explanations argument yield_impact, please refer reference page. NOTE! arguments climate_model, climate_scenario, member, bias_adj, cfe require specific strings provide climate model metadata output files. arguments impact gaia model simulation ; used populate climate data metadata outputs.","code":"# load gaia library(gaia)  # Path to the output folder. Change it to your desired location output_dir <- file.path(getwd(), 'gaia_output')  # Run gaia # The full run with raw climate data can take up to an hour gaia::yield_impact(   pr_hist_ncdf = NULL,                    # path to historical precipitation NetCDF file (must follow ISIMIP format); only if you wish to use your own historical precipitation observation   tas_hist_ncdf = NULL,                   # path to historical temperature NetCDF file (must follow ISIMIP format); only if you wish to use your own historical temperature observation   pr_proj_ncdf = pr_projection_file,      # path to future projected precipitation NetCDF file (must follow ISIMIP format)   tas_proj_ncdf = tas_projection_file,    # path to future projected temperature NetCDF file (must follow ISIMIP format)   timestep = 'monthly',                   # specify the time step of the NetCDF data (monthly or daily)   climate_hist_dir = climate_hist_dir,    # path to the folder that holds cropland weighted historical climate observations   historical_periods = c(1960:2001),      # vector of historical years selected for fitting   climate_model = 'canesm5',              # label of climate model name   climate_scenario = 'gcam-ref',          # label of climate scenario name   member = 'r1i1p1f1',                    # label of ensemble member name   bias_adj = 'w5e5',                      # label of climate data for bias adjustment for the global climate model (GCM)   cfe = 'no-cfe',                         # label of CO2 fertilization effect in the formula (default is no CFE)   gcam_version = 'gcam7',                 # output is different depending on the GCAM version (gcam6 or gcam7)   use_default_coeff = FALSE,              # set to TRUE when there is no historical climate data available   base_year = 2015                        # GCAM base year   start_year = 2015,                      # start year of the projected climate data   end_year = 2100,                        # end year of the projected climate data   smooth_window = 20,                     # number of years as smoothing window   co2_hist = NULL,                        # historical annual CO2 concentration. If NULL, will use default value   co2_proj = NULL,                        # projected annual CO2 concentration. If NULL, will use default value   diagnostics = TRUE,                     # set to TRUE to output diagnostic plots   output_dir = output_dir                 # path to the output folder )"},{"path":"/articles/vignette.html","id":"example-2","dir":"Articles","previous_headings":"Run gaia!","what":"Example 2","title":"User Guide","text":"example uses example weighted climate data described example data 2, processed cropland weights country level. weighted climate data generated using gaia::weighted_climate. example serves guide help users format data match weighted climate data structure raw climate data differs ISIMIP format. Running gaia directly weighted climate data requires minutes. Explore results output folder. detailed explanation output, checkout Example 3!","code":"# load gaia library(gaia)  # Path to the output folder. Change it to your desired location output_dir <- file.path(getwd(), 'gaia_output')  # Run gaia gaia::yield_impact(   climate_hist_dir = climate_hist_dir,    # path to the folder that holds cropland weighted historical climate observations   climate_impact_dir = climate_impact_dir,# path to the folder that holds cropland weighted projected climate   timestep = 'monthly',                   # specify the time step of the NetCDF data (monthly or daily)   climate_model = 'canesm5',              # label of climate model name   climate_scenario = 'gcam-ref',          # label of climate scenario name   member = 'r1i1p1f1',                    # label of ensemble member name   bias_adj = 'w5e5',                      # label of climate data for bias adjustment   cfe = 'no-cfe',                         # label of CO2 fertilization effect in the formula (default is no CFE)   gcam_version = 'gcam7',                 # output is different depending on the GCAM version (gcam6 or gcam7)   use_default_coeff = FALSE,              # set to TRUE when there is no historical climate data available   base_year = 2015,                       # GCAM base year   start_year = 2015,                      # start year of the projected climate data   end_year = 2100,                        # end year of the projected climate data   smooth_window = 20,                     # number of years as smoothing window   co2_hist = NULL,                        # historical annual CO2 concentration. If NULL, will use default value   co2_proj = NULL,                        # projected annual CO2 concentration. If NULL, will use default value   diagnostics = TRUE,                     # set to TRUE to output diagnostic plots   output_dir = output_dir                 # path to the output folder )"},{"path":"/articles/vignette.html","id":"example-3","dir":"Articles","previous_headings":"Run gaia!","what":"Example 3","title":"User Guide","text":"gaia model runs, intermediate outputs generated saved user-specified output folder. testing purposes, follow Example 2 outlined without modifying input data arguments, can expect see following key results. , provide additional instructions using function described Workflow section explain associated example outputs.","code":""},{"path":"/articles/vignette.html","id":"weighted_climate","dir":"Articles","previous_headings":"Run gaia! > Example 3","what":"weighted_climate","title":"User Guide","text":"downloaded example data 1 desired location, can use weighted_climate function calculate cropland-weighted monthly precipitation temperature projected climate. Please note step may take hour complete. create folder based specified climate_model argument (e.g., output_dir/weighted_climate/canesm5). Inside folder, find files containing precipitation temperature data weighted irrigated rainfed cropland areas 26 MIRCA crops. file structure organized columns follows: [year, month, 1, 2, 3, ..., 265], numbers correspond country IDs. view country names associated IDs, simply type country_id R console loading gaia package. example structure weighted precipitation data rainfed soybean (output_dir/weighted_climate/canesm5/anesm5_gcam-ref_month_precip_country_rfc_crop08_2015_2100.txt). Table 1. Soybean-area-weighted precipitation weighted_climate function.","code":"library(gaia)  # Path to the output folder where you wish to save the outputs. Change it accordingly output_dir <- file.path(getwd(), 'gaia_output')  # calculate weigted climate gaia::weighted_climate(pr_ncdf = pr_projection_file ,                        tas_ncdf = tas_projection_file ,                        timestep = 'monthly',                        climate_model = 'canesm5',                        climate_scenario = 'gcam-ref',                        time_periods = seq(2015, 2100, 1),                        output_dir = output_dir,                        name_append = NULL) ## Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  ##   object 'type_sum.accel' not found"},{"path":"/articles/vignette.html","id":"crop_calendars","dir":"Articles","previous_headings":"Run gaia! > Example 3","what":"crop_calendars","title":"User Guide","text":"crop calendar outlines planting harvesting months predefined crop across different countries. Users can modify crop calendar file add additional crops, following established format. example crop calendar structure. can also access crop calendar output output_dir/data_processed/crop_calendar.csv. Table 2. Crop calendar","code":"# Path to the output folder where you wish to save the outputs. Change it accordingly output_dir <- file.path(getwd(), 'gaia_output')  # calculate crop calendars crop_cal <- gaia::crop_calendars(output_dir = output_dir)  # print result crop_cal"},{"path":"/articles/vignette.html","id":"data_aggregation","dir":"Articles","previous_headings":"Run gaia! > Example 3","what":"data_aggregation","title":"User Guide","text":"data_aggregation function calculates crop growing seasons using climate variables processed weighted_climate along crop calendars historical projected periods. function prepares climate yield data subsequent model fitting. data_aggregation function creates two types files output_dir/data_processed folder: historic_vars_[crop-name].csv: file contains historical data crop. example, historical information soybean illustrated Table 3. weather_[climate-model]_[climate-scenario]_[crop-name].csv: file includes aggregated climate data specified crop. example climate information soybean shown Table 4. Table 3. Aggregated historical information soybean. Table 4. Aggregated weather information soybean.","code":"# Path to the output folder where you wish to save the outputs. Change it accordingly output_dir <- file.path(getwd(), 'gaia_output')  # aggregate crop and climate information at the country level data_agg <- gaia::data_aggregation(climate_hist_dir = climate_hist_dir,                                    climate_impact_dir = climate_impact_dir,                                    climate_model = 'canesm5',                                    climate_scenario = 'gcam-ref',                                    output_dir = output_dir)"},{"path":"/articles/vignette.html","id":"yield_regression","dir":"Articles","previous_headings":"Run gaia! > Example 3","what":"yield_regression","title":"User Guide","text":"gaia::yield_regression function performs empirical model fitting generates diagnostic plots comparing modeled yields FAO recorded yields crop type GCAM region scale. example comparison soybean illustrated Figure 2.  Figure 2: Model fitted yields versus FAO yields soybean.  parameters fitted model can found file located output_dir/data_processed/reg_out_[crop-name]_fit_lnyield_mmm_quad_noco2_nogdp.csv. Table 5. Fitted model soybean.","code":"# Path to the output folder where you wish to save the outputs. Change it accordingly output_dir <- file.path(getwd(), 'gaia_output')  # perform empirical regression gaia::yield_regression(diagnostics = TRUE,                        output_dir = output_dir)"},{"path":"/articles/vignette.html","id":"yield_shock_projection","dir":"Articles","previous_headings":"Run gaia! > Example 3","what":"yield_shock_projection","title":"User Guide","text":"gaia model completed fitting, gaia::yield_shock_projection function calculates projected annual yield shocks based input climate data. coarse-scale models like GCAM, gaia also computes smoothed yield shocks using user-specified smoothing window (default window 20 years). smoothed outputs, yield shocks base year set 1. results provided CSV outputs diagnostic plots. example annual soybean yield shocks illustrated Figure 3.  Figure 3: Projected yield shocks soybean.  output data annual smoothed yield shocks projection located folders output_dir/yield_impacts_annual (Table 6) output_dir/yield_impacts_smooth (Table 7). Table 6. Annual yield shocks soybean. Table 7. 20-year smoothed yield shocks soybean.","code":"# Path to the output folder where you wish to save the outputs. Change it accordingly output_dir <- file.path(getwd(), 'gaia_output')  # calculate projected yield shocks out_yield_shock <- gaia::yield_shock_projection(use_default_coeff = FALSE,                                                 climate_model = 'canesm5',                                                 climate_scenario = 'gcam-ref',                                                 base_year = 2015,                                                 start_year = 2015,                                                 end_year = 2100,                                                 smooth_window = 20,                                                 diagnostics = TRUE,                                                 output_dir = output_dir)"},{"path":"/articles/vignette.html","id":"gcam_agprodchange","dir":"Articles","previous_headings":"Run gaia! > Example 3","what":"gcam_agprodchange","title":"User Guide","text":"gcam_agprodchange function specifically designed Global Change Analysis Model (GCAM). GCAM requires agricultural productivity growth rate (APG) input, calculated based yield shocks baseline APG, varying according different SSP scenarios. Additionally, APG GCAM must region-basin scale. gaia::gcam_agprodchange function directly remaps country-level yield shocks region-basin APG. example , since climate_scenario = 'gcam-ref', use APG without SSP impact (Reference scenario APC) calculate climate-impacted APG based yield shocks computed previous step.  run complete, folder named [gcam-version]_agprodchange_[cfe] (e.g., gcam7_agprodchange_no-cfe) created specified output location. folder contains XML file agricultural productivity growth rate (APG) GCAM. Additionally, includes diagnostic figures illustrating APG region-basin. example APG soybean shown Figure 4 .  Figure 4: Agricultural productivity growth rate soybean. line region indicates APG region-basin intersection.  Back top","code":"# Path to the output folder where you wish to save the outputs. Change it accordingly output_dir <- file.path(getwd(), 'gaia_output')  # calculate region-basin agricultural productivity growth rate for GCAM gcam_apg <- gaia::gcam_agprodchange(data = out_yield_shock,                                     climate_model = 'canesm5',                                     climate_scenario = 'gcam-ref',                                     member = 'r1i1p1f1',                                     bias_adj = 'w5e5',                                     cfe = 'no-cfe',                                     gcam_version = 'gcam7',                                     diagnostics = TRUE,                                     output_dir = output_dir)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mengqi Zhao. Author, maintainer. Stephanie Waldhoff. Author. Claudia Tebaldi. Author. Abigail Snyder. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhao M, Waldhoff S, Tebaldi C, Snyder (2024). gaia: gaia: R package estimate crop yield responses temperature precipitation. R package version 1.0.0, https://github.com/JGCRI/gaia.","code":"@Manual{,   title = {gaia: gaia: An R package to estimate crop yield responses to temperature and precipitation},   author = {Mengqi Zhao and Stephanie Waldhoff and Claudia Tebaldi and Abigail Snyder},   year = {2024},   note = {R package version 1.0.0},   url = {https://github.com/JGCRI/gaia}, }"},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"gaia: An R package to estimate crop yield responses to temperature and precipitation","title":"gaia: An R package to estimate crop yield responses to temperature and precipitation","text":"gaia open-source R package designed estimate crop yield shocks response annual temperature precipitation variations CO2 concentrations country scale 12 major crops. gaia streamlines workflow raw climate data processing production different forms yield shocks, agricultural productivity changes region-basin level, can directly integrated latest Global Change Analysis Model (GCAM).","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"gaia: An R package to estimate crop yield responses to temperature and precipitation","text":"Zhao, M., Waldhoff, S., Tebaldi, C., Snyder, . 2024. gaia: R package estimate crop yield responses temperature precipitation. (progress) Journal Open Source Software, DOI: XXXX","code":""},{"path":"/index.html","id":"installation-guide","dir":"","previous_headings":"","what":"Installation Guide","title":"gaia: An R package to estimate crop yield responses to temperature and precipitation","text":"R (https://www.r-project.org/) R studio (https://www.rstudio.com/) Open R studio: Additional steps UBUNTU terminal Additional steps MACOSX terminal","code":"install.packages(\"devtools\") devtools::install_github(\"JGCRI/gaia\") install.packages(\"remotes\") remotes::install_github(\"JGCRI/gaia\") sudo add-apt-repository ppa:ubuntugis/ppa sudo apt-get update sudo apt-get install libudunits2-dev libgdal-dev libgeos-dev libproj-dev libmagick++-dev brew install pkg-config brew install gdal"},{"path":"/index.html","id":"related-publications","dir":"","previous_headings":"","what":"Related Publications","title":"gaia: An R package to estimate crop yield responses to temperature and precipitation","text":"Waldhoff, S.T., Wing, .S., Edmonds, J., Leng, G. Zhang, X., 2020. Future climate impacts global agricultural yields 21st century. Environmental Research Letters, 15(11), p.114010. https://doi.org/10.1088/1748-9326/abadcb","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"gaia: An R package to estimate crop yield responses to temperature and precipitation","text":"Whether find typo documentation, find bug, want develop functionality think make gaia robust, welcome contribute! contributing page walk processes contribute gaia.","code":""},{"path":"/reference/agprodchange_interp.html","id":null,"dir":"Reference","previous_headings":"","what":"agprodchange_interp — agprodchange_interp","title":"agprodchange_interp — agprodchange_interp","text":"Check reference agricultural productivity timestep user defined timestep , linearly interpolate value","code":""},{"path":"/reference/agprodchange_interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"agprodchange_interp — agprodchange_interp","text":"","code":"agprodchange_interp(data = NULL, gcam_timestep = 5)"},{"path":"/reference/agprodchange_interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"agprodchange_interp — agprodchange_interp","text":"data = NULL. Data frame agprodchange gcam_timestep Default = 5. Integer time step GCAM (Select either 1 5 years GCAM use)","code":""},{"path":"/reference/agprodchange_interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"agprodchange_interp — agprodchange_interp","text":"data frame interpolated data","code":""},{"path":"/reference/agprodchange_ni_gcam6.html","id":null,"dir":"Reference","previous_headings":"","what":"agprodchange_ni_gcam6 — agprodchange_ni_gcam6","title":"agprodchange_ni_gcam6 — agprodchange_ni_gcam6","text":"agprodchange_ni_gcam6","code":""},{"path":"/reference/agprodchange_ni_gcam6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"agprodchange_ni_gcam6 — agprodchange_ni_gcam6","text":"","code":"agprodchange_ni_gcam6"},{"path":"/reference/agprodchange_ni_gcam6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"agprodchange_ni_gcam6 — agprodchange_ni_gcam6","text":"R data frame","code":""},{"path":"/reference/agprodchange_ni_gcam6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"agprodchange_ni_gcam6 — agprodchange_ni_gcam6","text":"GCAM6 ag productivity change reference data","code":""},{"path":"/reference/agprodchange_ni_gcam6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"agprodchange_ni_gcam6 — agprodchange_ni_gcam6","text":"","code":"if (FALSE) { # \\dontrun{  library(gaia);  agprodchange_ni_gcam6 <- gaia::agprodchange_ni_gcam6 } # }"},{"path":"/reference/agprodchange_ni_gcam7.html","id":null,"dir":"Reference","previous_headings":"","what":"agprodchange_ni_gcam7 — agprodchange_ni_gcam7","title":"agprodchange_ni_gcam7 — agprodchange_ni_gcam7","text":"agprodchange_ni_gcam7","code":""},{"path":"/reference/agprodchange_ni_gcam7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"agprodchange_ni_gcam7 — agprodchange_ni_gcam7","text":"","code":"agprodchange_ni_gcam7"},{"path":"/reference/agprodchange_ni_gcam7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"agprodchange_ni_gcam7 — agprodchange_ni_gcam7","text":"R data frame","code":""},{"path":"/reference/agprodchange_ni_gcam7.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"agprodchange_ni_gcam7 — agprodchange_ni_gcam7","text":"GCAM7 ag productivity change reference data","code":""},{"path":"/reference/agprodchange_ni_gcam7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"agprodchange_ni_gcam7 — agprodchange_ni_gcam7","text":"","code":"if (FALSE) { # \\dontrun{  library(gaia);  agprodchange_ni_gcam7 <- gaia::agprodchange_ni_gcam7 } # }"},{"path":"/reference/agprodchange_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"agprodchange_ref — agprodchange_ref","title":"agprodchange_ref — agprodchange_ref","text":"Get reference agricultural productivity change based GCAM version","code":""},{"path":"/reference/agprodchange_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"agprodchange_ref — agprodchange_ref","text":"","code":"agprodchange_ref(   gcam_version = \"gcam7\",   gcam_timestep = 5,   base_year = 2015,   climate_scenario = NULL,   gcamdata_dir = NULL )"},{"path":"/reference/agprodchange_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"agprodchange_ref — agprodchange_ref","text":"gcam_version Default = 'gcam7'. String GCAM version. support gcam6 gcam7 gcam_timestep Default = 5. Integer time step GCAM (Select either 1 5 years GCAM use) base_year Default = 2015. Integer base year (GCAM) climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') gcamdata_dir Default = NULL. String directory gcamdata folder within specific GCAM version. gcamdata need run drake CSV outputs beforehand.","code":""},{"path":"/reference/agprodchange_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"agprodchange_ref — agprodchange_ref","text":"data frame baseline agricultural productivity change GCAM","code":""},{"path":"/reference/clean_yield.html","id":null,"dir":"Reference","previous_headings":"","what":"clean_yield — clean_yield","title":"clean_yield — clean_yield","text":"Function clean FAO yield data","code":""},{"path":"/reference/clean_yield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean_yield — clean_yield","text":"","code":"clean_yield(fao_yield = NULL)"},{"path":"/reference/clean_yield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clean_yield — clean_yield","text":"fao_yield Default = NULL. Data frame fao yield table","code":""},{"path":"/reference/clean_yield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clean_yield — clean_yield","text":"data frame formatted FAO yield data","code":""},{"path":"/reference/climate_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"climate_impact — climate_impact","title":"climate_impact — climate_impact","text":"Estimate climate impacts (ratio future base year, average)","code":""},{"path":"/reference/climate_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"climate_impact — climate_impact","text":"","code":"climate_impact(   use_default_coeff = FALSE,   climate_model = NULL,   climate_scenario = NULL,   crop_name = NULL,   base_year = NULL,   start_year = NULL,   end_year = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/climate_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"climate_impact — climate_impact","text":"use_default_coeff Default = FALSE. Binary using default regression coefficients. Set TRUE use default coefficients instead calculating coefficients historical climate data. climate_model Default = NULL. String climate model name climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') crop_name Default = NULL. String crop name base_year Default = NULL. Integer base year (GCAM) start_year Default = NULL. Integer  start year data end_year Default = NULL. Integer end year data output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/climate_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"climate_impact — climate_impact","text":"data frame projected climate impacts annual yield shocks country level","code":""},{"path":"/reference/co2_historical.html","id":null,"dir":"Reference","previous_headings":"","what":"co2_historical — co2_historical","title":"co2_historical — co2_historical","text":"co2_historical","code":""},{"path":"/reference/co2_historical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"co2_historical — co2_historical","text":"","code":"co2_historical"},{"path":"/reference/co2_historical.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"co2_historical — co2_historical","text":"R data frame","code":""},{"path":"/reference/co2_historical.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"co2_historical — co2_historical","text":"Historical CO2 concentration hist_co2_conc.csv","code":""},{"path":"/reference/co2_historical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"co2_historical — co2_historical","text":"","code":"if (FALSE) { # \\dontrun{  library(gaia);  co2_historical <- gaia::co2_historical } # }"},{"path":"/reference/co2_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"co2_projection — co2_projection","title":"co2_projection — co2_projection","text":"co2_projection","code":""},{"path":"/reference/co2_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"co2_projection — co2_projection","text":"","code":"co2_projection"},{"path":"/reference/co2_projection.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"co2_projection — co2_projection","text":"R data frame","code":""},{"path":"/reference/co2_projection.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"co2_projection — co2_projection","text":"GCAM7 reference CO2 concentration","code":""},{"path":"/reference/co2_projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"co2_projection — co2_projection","text":"","code":"if (FALSE) { # \\dontrun{  library(gaia);  co2_projection <- gaia::co2_projection } # }"},{"path":"/reference/coef_default.html","id":null,"dir":"Reference","previous_headings":"","what":"coef_default — coef_default","title":"coef_default — coef_default","text":"coef_default","code":""},{"path":"/reference/coef_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coef_default — coef_default","text":"","code":"coef_default"},{"path":"/reference/coef_default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"coef_default — coef_default","text":"R data frame","code":""},{"path":"/reference/coef_default.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"coef_default — coef_default","text":"Regression coefficients derived default historical climate data","code":""},{"path":"/reference/coef_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"coef_default — coef_default","text":"","code":"if (FALSE) { # \\dontrun{  library(gaia);  coef_default <- gaia::coef_default } # }"},{"path":"/reference/colname_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"colname_replace — colname_replace","title":"colname_replace — colname_replace","text":"Shorter command replace column names","code":""},{"path":"/reference/colname_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colname_replace — colname_replace","text":"","code":"colname_replace(d, x, y)"},{"path":"/reference/colname_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"colname_replace — colname_replace","text":"d Data frame x String replaced y Replacing string","code":""},{"path":"/reference/colname_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"colname_replace — colname_replace","text":"data frame","code":""},{"path":"/reference/crop_calendars.html","id":null,"dir":"Reference","previous_headings":"","what":"crop_calendars — crop_calendars","title":"crop_calendars — crop_calendars","text":"Generate planting months country Data SAGE","code":""},{"path":"/reference/crop_calendars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"crop_calendars — crop_calendars","text":"","code":"crop_calendars(output_dir = file.path(getwd(), \"output\"))"},{"path":"/reference/crop_calendars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"crop_calendars — crop_calendars","text":"output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/crop_calendars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"crop_calendars — crop_calendars","text":"data frame crop calendars","code":""},{"path":"/reference/crop_month.html","id":null,"dir":"Reference","previous_headings":"","what":"crop_month — crop_month","title":"crop_month — crop_month","text":"Function estimate growing season crop country (SAGE db)","code":""},{"path":"/reference/crop_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"crop_month — crop_month","text":"","code":"crop_month(climate_data = NULL, crop_name = NULL, crop_calendar = NULL)"},{"path":"/reference/crop_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"crop_month — crop_month","text":"climate_data Default = NULL. Data table climate data crop_name Default = NULL. String crop name crop_calendar Default = NULL. Data table crop calendar","code":""},{"path":"/reference/crop_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"crop_month — crop_month","text":"data frame crop growing season","code":""},{"path":"/reference/data_aggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"data_aggregation — data_aggregation","title":"data_aggregation — data_aggregation","text":"Process multiple models analyze historical weather variables crop yields","code":""},{"path":"/reference/data_aggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_aggregation — data_aggregation","text":"","code":"data_aggregation(   climate_hist_dir = NULL,   climate_impact_dir = NULL,   climate_model = \"gcm\",   climate_scenario = \"rcp\",   historical_periods = NULL,   co2_hist = NULL,   co2_proj = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/data_aggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data_aggregation — data_aggregation","text":"climate_hist_dir Default = NULL. String path processed historical climate data folder climate_impact_dir Default = NULL. String path processed future climate data folder using weighted_climate function climate_model Default = NULL. String climate model (e.g., 'CanESM5') climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') historical_periods Default = NULL. Vector years subset historical climate data. NULL, use default climate data period co2_hist Default = NULL. Data table historical CO2 concentration columns [year, co2_conc]. NULL, use built-CO2 emission data co2_proj Default = NULL. Data table projected CO2 concentration columns [year, co2_conc]. NULL, use built-CO2 emission data output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/data_aggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data_aggregation — data_aggregation","text":"list historical projected weather variables crop data.","code":""},{"path":"/reference/data_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"data_merge — data_merge","title":"data_merge — data_merge","text":"Function merge iso codes, FAO yield (historic), crop calendar, weather variables select variables regression analysis","code":""},{"path":"/reference/data_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_merge — data_merge","text":"","code":"data_merge(   data = NULL,   crop_name = NULL,   yield = NULL,   output_dir = NULL,   co2_hist = NULL,   gdp_hist = gdp )"},{"path":"/reference/data_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data_merge — data_merge","text":"data Default = NULL. Data table crop data created crop_month crop_name Default = NULL. String crop name yield Default = NULL. Data table yield data output_dir Default = NULL. String path output folder co2_hist Default = NULL. Data table historical CO2 concentration [year, co2_conc] gdp_hist Default = gdp. Data table historical GDP ISO [iso, year, gdp_pcap_ppp]","code":""},{"path":"/reference/data_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data_merge — data_merge","text":"data frame aggregated country, crop, weather data","code":""},{"path":"/reference/data_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"data_trans — data_trans","title":"data_trans — data_trans","text":"Create data frame future monthly weather variables iso codes projecting yields using fitted regression model","code":""},{"path":"/reference/data_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_trans — data_trans","text":"","code":"data_trans(   data = NULL,   climate_model = NULL,   climate_scenario = NULL,   crop_name = NULL,   output_dir = NULL,   co2_proj = NULL )"},{"path":"/reference/data_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data_trans — data_trans","text":"data Default = NULL. Data table crop data created crop_month climate_model Default = NULL. String climate model climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') crop_name Default = NULL. String crop name output_dir Default = NULL. String path output folder co2_proj Default = NULL. Data table future CO2 concentration [year, co2_conc]","code":""},{"path":"/reference/data_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data_trans — data_trans","text":"data frame formatted future weather data","code":""},{"path":"/reference/format_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"format_projection — format_projection","title":"format_projection — format_projection","text":"Format smoothed yield impact projection wider","code":""},{"path":"/reference/format_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format_projection — format_projection","text":"","code":"format_projection(   data = NULL,   base_year = NULL,   gcam_timestep = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/format_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format_projection — format_projection","text":"data Default = NULL. Data frame yield_shock_projection columns [crop, model, iso, years] base_year Default = NULL. Integer base year (GCAM) gcam_timestep Default = NULL. Integer time step GCAM (Select either 1 5 years GCAM use) output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/format_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"format_projection — format_projection","text":"data frame formatted smoothed yield impact projection","code":""},{"path":"/reference/gaia-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gaia: gaia: An R package to estimate crop yield responses to temperature and precipitation — gaia-package","title":"gaia: gaia: An R package to estimate crop yield responses to temperature and precipitation — gaia-package","text":"empirical model estimate annual crop yield responses temperature precipitation.","code":""},{"path":[]},{"path":"/reference/gaia-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gaia: gaia: An R package to estimate crop yield responses to temperature and precipitation — gaia-package","text":"Maintainer: Mengqi Zhao mengqi.zhao@pnnl.gov (ORCID) Authors: Stephanie Waldhoff Stephanie.Waldhoff@pnnl.gov (ORCID) Claudia Tebaldi claudia.tebaldi@pnnl.gov (ORCID) Abigail Snyder abigail.snyder@pnnl.gov (ORCID)","code":""},{"path":"/reference/gcam_agprodchange.html","id":null,"dir":"Reference","previous_headings":"","what":"gcam_agprodchange — gcam_agprodchange","title":"gcam_agprodchange — gcam_agprodchange","text":"Map country level yield impacts GCAM region-GLU level Calculate agricultural productivity change region GLU Output agprodchange XML","code":""},{"path":"/reference/gcam_agprodchange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gcam_agprodchange — gcam_agprodchange","text":"","code":"gcam_agprodchange(   data = NULL,   gcamdata_dir = NULL,   climate_model = \"gcm\",   climate_scenario = \"rcp\",   member = \"member\",   bias_adj = \"ba\",   gcam_version = \"gcam7\",   gcam_timestep = 5,   cfe = \"no-cfe\",   base_year = 2015,   diagnostics = TRUE,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/gcam_agprodchange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gcam_agprodchange — gcam_agprodchange","text":"data Default = NULL. Output data frame function yield_shock_projection, similar format data gcamdata_dir Default = NULL. String directory gcamdata folder within specific GCAM version. gcamdata need run drake CSV outputs beforehand. climate_model Default = 'gcm'. String climate model name (e.g., 'CanESM5') climate_scenario Default = 'rcp'. String climate scenario name (e.g., 'ssp245') member Default = 'member'. String ensemble member name bias_adj Default = 'ba'. String dataset used climate data bias adjustment gcam_version Default = 'gcam7'. String GCAM version. support gcam6 gcam7 gcam_timestep Default = 5. Integer time step GCAM (Select either 1 5 years GCAM use) cfe Default = '-cfe'. String whether yield impact formula implimented CO2 fertilization effect. base_year Default = 2015. Integer base year (GCAM) diagnostics Default = TRUE. Logical performing diagnostic plot output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/gcam_agprodchange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gcam_agprodchange — gcam_agprodchange","text":"data frame formatted agricultural productivity change GCAM","code":""},{"path":"/reference/get_agprodchange.html","id":null,"dir":"Reference","previous_headings":"","what":"—————————————————————————– get_agprodchange — get_agprodchange","title":"—————————————————————————– get_agprodchange — get_agprodchange","text":"Calculate agricultural productivity change based yield impact multiplier impact yield","code":""},{"path":"/reference/get_agprodchange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"—————————————————————————– get_agprodchange — get_agprodchange","text":"","code":"get_agprodchange(data = NULL, year_pairs = NULL, gcam_timestep = 5)"},{"path":"/reference/get_agprodchange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"—————————————————————————– get_agprodchange — get_agprodchange","text":"data Default = NULL. Output data frame function yield_shock_projection, similar format data year_pairs Default = NULL. Data frame paired years from_year to_year calcualte ag productivity change gcam_timestep Default = 5. Integer time step GCAM (Select either 1 5 years GCAM use)","code":""},{"path":"/reference/get_agprodchange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"—————————————————————————– get_agprodchange — get_agprodchange","text":"data frame agricultural productivity change","code":""},{"path":"/reference/get_cropland_weight.html","id":null,"dir":"Reference","previous_headings":"","what":"get_cropland_weight — get_cropland_weight","title":"get_cropland_weight — get_cropland_weight","text":"Calculate weight cropland area within intersected region-glu-country cropland area within intersected region-glu","code":""},{"path":"/reference/get_cropland_weight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_cropland_weight — get_cropland_weight","text":"","code":"get_cropland_weight(   gcam_version = \"gcam7\",   climate_scenario = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/get_cropland_weight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_cropland_weight — get_cropland_weight","text":"gcam_version Default = 'gcam7'. String GCAM version. support gcam6 gcam7 climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/get_cropland_weight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_cropland_weight — get_cropland_weight","text":"list cropland weight within specific spatial boundary","code":""},{"path":"/reference/get_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_example_data — get_example_data","title":"get_example_data — get_example_data","text":"get_example_data","code":""},{"path":"/reference/get_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_example_data — get_example_data","text":"","code":"get_example_data(   download_url = \"\",   file_extension = \"zip\",   data_dir = file.path(getwd(), \"example\"),   check_exist = TRUE )"},{"path":"/reference/get_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_example_data — get_example_data","text":"download_url Default = ”. Link downloadable dataset file_extension Default = 'zip'. String file extension without \".\" data_dir Default= file.path(getwd(), 'example'). Path desired location download data check_exist Default = TRUE. Binary check example data already exists. TRUE, function gives error downloaded folder already exist","code":""},{"path":"/reference/get_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_example_data — get_example_data","text":"string path data downloaded ","code":""},{"path":"/reference/get_mirca2000_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mirca2000_data — get_mirca2000_data","title":"get_mirca2000_data — get_mirca2000_data","text":"get_mirca2000_data","code":""},{"path":"/reference/get_mirca2000_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mirca2000_data — get_mirca2000_data","text":"","code":"get_mirca2000_data(   download_url =     \"https://zenodo.org/records/7422506/files/harvested_area_grids.zip?download=1\",   file_extension = \"zip\",   data_dir = file.path(getwd(), \"example\") )"},{"path":"/reference/get_mirca2000_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mirca2000_data — get_mirca2000_data","text":"download_url Default = 'https://zenodo.org/records/7422506/files/harvested_area_grids.zip?download=1'. Link downloadable dataset file_extension Default = 'zip'. String file extension without \".\" data_dir Default = file.path(getwd(), 'example'). Path desired location download data","code":""},{"path":"/reference/get_mirca2000_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_mirca2000_data — get_mirca2000_data","text":"string path data downloaded ","code":""},{"path":"/reference/get_mirca_cropland.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mirca_cropland — get_mirca_cropland","title":"get_mirca_cropland — get_mirca_cropland","text":"Calculate cropland fraction within country glu intersection","code":""},{"path":"/reference/get_mirca_cropland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mirca_cropland — get_mirca_cropland","text":"","code":"get_mirca_cropland(raster_brick = NULL, mapping = NULL)"},{"path":"/reference/get_mirca_cropland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mirca_cropland — get_mirca_cropland","text":"raster_brick Default = NULL. Raster brick mirca cropland mapping Default = NULL. Data table 0.5 degree 67420 grid cells lat lon global land area","code":""},{"path":"/reference/get_mirca_cropland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_mirca_cropland — get_mirca_cropland","text":"list cropland fraction country GLU intersection","code":""},{"path":"/reference/get_nc_time.html","id":null,"dir":"Reference","previous_headings":"","what":"get_nc_time — get_nc_time","title":"get_nc_time — get_nc_time","text":"get netcdf file time series","code":""},{"path":"/reference/get_nc_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_nc_time — get_nc_time","text":"","code":"get_nc_time(nc_file = NULL)"},{"path":"/reference/get_nc_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_nc_time — get_nc_time","text":"nc_file Default = NULL. String path nc file","code":""},{"path":"/reference/get_nc_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_nc_time — get_nc_time","text":"vector time series based input NetCDF file.","code":""},{"path":"/reference/get_weighted_yield_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"get_weighted_yield_impact — get_weighted_yield_impact","title":"get_weighted_yield_impact — get_weighted_yield_impact","text":"Calculate weighted yield impact region-glu scale GCAM commodity","code":""},{"path":"/reference/get_weighted_yield_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_weighted_yield_impact — get_weighted_yield_impact","text":"","code":"get_weighted_yield_impact(   data = NULL,   gcam_version = \"gcam7\",   climate_scenario = NULL,   diagnostics = TRUE,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/get_weighted_yield_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_weighted_yield_impact — get_weighted_yield_impact","text":"data Default = NULL. Output data frame function yield_shock_projection, similar format data gcam_version Default = 'gcam7'. String GCAM version. support gcam6 gcam7 climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') diagnostics Default = TRUE. Logical performing diagnostic plot output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/get_weighted_yield_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_weighted_yield_impact — get_weighted_yield_impact","text":"data frame projected yield shocks region-basin intersection","code":""},{"path":"/reference/input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"input_data — input_data","title":"input_data — input_data","text":"read data output number rows columns variable names","code":""},{"path":"/reference/input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_data — input_data","text":"","code":"input_data(   folder_path = NULL,   input_file = NULL,   skip_number = 0,   quietly = FALSE )"},{"path":"/reference/input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_data — input_data","text":"folder_path Default = NULL. String folder path input_file Default = NULL. String name csv file read skip_number Default = 0. Integer number rows skip quietly Default= FALSE. Logical. TRUE output input data information; FALSE silent.","code":""},{"path":"/reference/input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"input_data — input_data","text":"data table input CSV file","code":""},{"path":"/reference/iso_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"iso_replace — iso_replace","title":"iso_replace — iso_replace","text":"ISO replacements countries non-standard names (can ad come )","code":""},{"path":"/reference/iso_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iso_replace — iso_replace","text":"","code":"iso_replace(d)"},{"path":"/reference/iso_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"iso_replace — iso_replace","text":"d Data frame country_name column","code":""},{"path":"/reference/iso_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"iso_replace — iso_replace","text":"data frame","code":""},{"path":"/reference/merge_data.html","id":null,"dir":"Reference","previous_headings":"","what":"merge_data — merge_data","title":"merge_data — merge_data","text":"Merge columns two data frames using two variables","code":""},{"path":"/reference/merge_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge_data — merge_data","text":"","code":"merge_data(d1, d2, x1, x2)"},{"path":"/reference/merge_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge_data — merge_data","text":"d1 Data frame d2 Data frame x1 String column name d1 x2 String column name d2","code":""},{"path":"/reference/merge_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge_data — merge_data","text":"data frame","code":""},{"path":"/reference/mirca_to_gcam.html","id":null,"dir":"Reference","previous_headings":"","what":"This script includes the following functions: mirca_to_gcam get_mirca_cropland get_cropland_weight get_weighted_yield_impact get_agprodchange gcam_agprodchange mirca_to_gcam — mirca_to_gcam","title":"This script includes the following functions: mirca_to_gcam get_mirca_cropland get_cropland_weight get_weighted_yield_impact get_agprodchange gcam_agprodchange mirca_to_gcam — mirca_to_gcam","text":"Mapping GCAM region, GLU, country Mapping mirca crop GCAM commodities","code":""},{"path":"/reference/mirca_to_gcam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This script includes the following functions: mirca_to_gcam get_mirca_cropland get_cropland_weight get_weighted_yield_impact get_agprodchange gcam_agprodchange mirca_to_gcam — mirca_to_gcam","text":"","code":"mirca_to_gcam(gcam_version = \"gcam7\", climate_scenario = NULL)"},{"path":"/reference/mirca_to_gcam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This script includes the following functions: mirca_to_gcam get_mirca_cropland get_cropland_weight get_weighted_yield_impact get_agprodchange gcam_agprodchange mirca_to_gcam — mirca_to_gcam","text":"gcam_version Default = 'gcam7'. String GCAM version. support gcam6 gcam7 climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245')","code":""},{"path":"/reference/mirca_to_gcam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This script includes the following functions: mirca_to_gcam get_mirca_cropland get_cropland_weight get_weighted_yield_impact get_agprodchange gcam_agprodchange mirca_to_gcam — mirca_to_gcam","text":"list mapping GCAM region, GLU, country MIRCA crops, GCAM commodities","code":""},{"path":"/reference/output_data.html","id":null,"dir":"Reference","previous_headings":"","what":"output_data — output_data","title":"output_data — output_data","text":"write output","code":""},{"path":"/reference/output_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"output_data — output_data","text":"","code":"output_data(   data = NULL,   save_path = file.path(getwd(), \"output\"),   file_name = NULL,   is_figure = FALSE,   data_info = \"Data\" )"},{"path":"/reference/output_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"output_data — output_data","text":"data Default = NULL. Data frame save_path Default = NULL. String path output folder file_name Default = NULL. String file name is_figure Default = FALSE. Binary saving figure data_info Default = 'Data'. String describing data information","code":""},{"path":"/reference/path_check.html","id":null,"dir":"Reference","previous_headings":"","what":"path_check — path_check","title":"path_check — path_check","text":"check file format correct file exists","code":""},{"path":"/reference/path_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"path_check — path_check","text":"","code":"path_check(path = NULL, file_type = NULL)"},{"path":"/reference/path_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"path_check — path_check","text":"path Default = NULL. String path file file_type Default = NULL. String extension file","code":""},{"path":"/reference/pkg_example.html","id":null,"dir":"Reference","previous_headings":"","what":"pkg_example — pkg_example","title":"pkg_example — pkg_example","text":"list example file paths","code":""},{"path":"/reference/pkg_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pkg_example — pkg_example","text":"","code":"pkg_example(path = NULL)"},{"path":"/reference/pkg_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pkg_example — pkg_example","text":"path Default = NULL. String path example files","code":""},{"path":"/reference/plot_agprodchange.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_agprodchange — plot_agprodchange","title":"plot_agprodchange — plot_agprodchange","text":"Plot projected ag productivity change GCAM commodity","code":""},{"path":"/reference/plot_agprodchange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_agprodchange — plot_agprodchange","text":"","code":"plot_agprodchange(data = NULL, commodity = NULL, output_dir = NULL)"},{"path":"/reference/plot_agprodchange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_agprodchange — plot_agprodchange","text":"data Default = NULL. Data frame data plot commodity Default = NULL. String GCAM commodity output_dir Default = NULL. String path output folder","code":""},{"path":"/reference/plot_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_fit — plot_fit","title":"plot_fit — plot_fit","text":"Figure fitted regression estimates compared FAO yields","code":""},{"path":"/reference/plot_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_fit — plot_fit","text":"","code":"plot_fit(   data = NULL,   crop_name = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/plot_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_fit — plot_fit","text":"data Default = NULL. Data frame crop data crop_name Default = NULL. String crop name output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_map — plot_map","title":"plot_map — plot_map","text":"Plot maps year, model, scenari, crop","code":""},{"path":"/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_map — plot_map","text":"","code":"plot_map(   data = NULL,   plot_years = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_map — plot_map","text":"data Default = NULL. Data frame data plot plot_years Default = NULL. Integer years plot output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/plot_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_projection — plot_projection","title":"plot_projection — plot_projection","text":"Figure (raw) annual predicted values (shows interannual variability)","code":""},{"path":"/reference/plot_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_projection — plot_projection","text":"","code":"plot_projection(   data = NULL,   climate_model = NULL,   climate_scenario = NULL,   crop_name = NULL,   base_year = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/plot_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_projection — plot_projection","text":"data Default = NULL. Data frame data plot climate_model Default = NULL. String climate model name climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') crop_name Default = NULL. String crop name base_year Default = NULL. Integer base year (GCAM) output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/plot_projection_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_projection_smooth — plot_projection_smooth","title":"plot_projection_smooth — plot_projection_smooth","text":"Figure (smoothed) predicted values","code":""},{"path":"/reference/plot_projection_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_projection_smooth — plot_projection_smooth","text":"","code":"plot_projection_smooth(   data = NULL,   climate_model = NULL,   climate_scenario = NULL,   crop_name = NULL,   base_year = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/plot_projection_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_projection_smooth — plot_projection_smooth","text":"data Default = NULL. Data frame data plot climate_model Default = NULL. String climate model name climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') crop_name Default = NULL. String crop name base_year Default = NULL. Integer base year (GCAM) output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/plot_yield_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_yield_impact — plot_yield_impact","title":"plot_yield_impact — plot_yield_impact","text":"Plot projected yield impact GCAM commodity","code":""},{"path":"/reference/plot_yield_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_yield_impact — plot_yield_impact","text":"","code":"plot_yield_impact(   data = NULL,   commodity = NULL,   crop_type = NULL,   output_dir = NULL )"},{"path":"/reference/plot_yield_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_yield_impact — plot_yield_impact","text":"data Default = NULL. Data frame data plot commodity Default = NULL. String GCAM commodity crop_type Default = NULL. String mirca crop type output_dir Default = NULL. String path output folder","code":""},{"path":"/reference/prep_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"prep_regression — prep_regression","title":"prep_regression — prep_regression","text":"Prepare historic dataframe regression analysis, create variables may used model specifications","code":""},{"path":"/reference/prep_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prep_regression — prep_regression","text":"","code":"prep_regression(data = NULL)"},{"path":"/reference/prep_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prep_regression — prep_regression","text":"data Default = NULL. Data frame crop data","code":""},{"path":"/reference/prep_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prep_regression — prep_regression","text":"data frame formatted historical weather crop data","code":""},{"path":"/reference/regression_fixed_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"regression_fixed_effects — regression_fixed_effects","title":"regression_fixed_effects — regression_fixed_effects","text":"Estimate regression Regression estimation y_hat compare historic data.","code":""},{"path":"/reference/regression_fixed_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"regression_fixed_effects — regression_fixed_effects","text":"","code":"regression_fixed_effects(   data = NULL,   crop_name = NULL,   formula = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/regression_fixed_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"regression_fixed_effects — regression_fixed_effects","text":"data Default = NULL. Data frame crop data crop_name Default = NULL. String crop name formula Default = NULL. String regression fomular. Default waldhoff_formula output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/regression_fixed_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"regression_fixed_effects — regression_fixed_effects","text":"data frame historical weather variables used regression model","code":""},{"path":"/reference/regression_fixed_effects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"regression_fixed_effects — regression_fixed_effects","text":"regression based country fixed effects control heterogeneous unobserved time-invariant influences vary across countries (e.g., distribution soil quality), time-trend controls temporally-varying influences common countries (e.g., improved cultivars)","code":""},{"path":"/reference/smooth_impacts.html","id":null,"dir":"Reference","previous_headings":"","what":"smooth_impacts — smooth_impacts","title":"smooth_impacts — smooth_impacts","text":"Smooth annual impacts using moving average output certain time step E.g., 2020_avg = mean(2011:2030)","code":""},{"path":"/reference/smooth_impacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"smooth_impacts — smooth_impacts","text":"","code":"smooth_impacts(   data = NULL,   climate_model = NULL,   climate_scenario = NULL,   crop_name = NULL,   base_year = NULL,   start_year = NULL,   end_year = NULL,   smooth_window = 20,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/smooth_impacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"smooth_impacts — smooth_impacts","text":"climate_model Default = NULL. String climate model name climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') crop_name Default = NULL. String crop name base_year Default = NULL. Integer base year (GCAM) start_year Default = NULL. Integer  start year data end_year Default = NULL. Integer end year data smooth_window Default = 20. Integer smoothing window years output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/smooth_impacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"smooth_impacts — smooth_impacts","text":"data frame projected smoothed climate impacts annual yield shocks country level","code":""},{"path":"/reference/weather_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"weather_agg — weather_agg","title":"weather_agg — weather_agg","text":"Function aggregate cleaned temperature precipitation data crop","code":""},{"path":"/reference/weather_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weather_agg — weather_agg","text":"","code":"weather_agg(   file_precip = NULL,   file_temp = NULL,   crop_name = NULL,   time_periods = NULL )"},{"path":"/reference/weather_agg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weather_agg — weather_agg","text":"file_precip Default = NULL. String path precipitation file file_temp Default = NULL. String path temperature file crop_name Default = NULL. String crop name time_periods Default = NULL. Vector years subset climate data. NULL, use default climate data period","code":""},{"path":"/reference/weather_agg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"weather_agg — weather_agg","text":"data frame aggregated weather data","code":""},{"path":"/reference/weather_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"weather_clean — weather_clean","title":"weather_clean — weather_clean","text":"Function clean input weather files (historic model projections) regression analysis","code":""},{"path":"/reference/weather_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weather_clean — weather_clean","text":"","code":"weather_clean(   file = NULL,   crop_name = NULL,   weather_var = NULL,   irr_type = NULL,   time_periods = NULL )"},{"path":"/reference/weather_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weather_clean — weather_clean","text":"file Default = NULL. String path climate file crop_name Default = NULL. String crop name weather_var Default = NULL. String weather var name irr_type Default = NULL. String irrigation type. Options: 'irr', 'rf' time_periods Default = NULL. vector years subset climate data. NULL, use default climate data period","code":""},{"path":"/reference/weather_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"weather_clean — weather_clean","text":"data frame formatted weather data","code":""},{"path":"/reference/weighted_climate.html","id":null,"dir":"Reference","previous_headings":"","what":"weighted_climate — weighted_climate","title":"weighted_climate — weighted_climate","text":"Process standard NetCDF files ISIMIP country level climate based crop harvested area MIRCA2000","code":""},{"path":"/reference/weighted_climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weighted_climate — weighted_climate","text":"","code":"weighted_climate(   pr_ncdf = NULL,   tas_ncdf = NULL,   timestep = \"monthly\",   climate_model = \"gcm\",   climate_scenario = \"rcp\",   time_periods = NULL,   output_dir = file.path(getwd(), \"output\"),   name_append = NULL )"},{"path":"/reference/weighted_climate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weighted_climate — weighted_climate","text":"pr_ncdf Default = NULL. List paths precipitation NetCDF files ISIMIP tas_ncdf Default = NULL. List paths temperature NetCDF files ISIMIP timestep Default = 'monthly'. String input climate data time step (e.g., 'monthly', 'daily') climate_model Default = NULL. String climate model (e.g., 'CanESM5') climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') time_periods Default = NULL. Vector years subset climate data. NULL, use default climate data period output_dir Default = file.path(getwd(), 'output'). String output directory name_append Default = NULL. String name append output folder","code":""},{"path":"/reference/yield_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"yield_impact — yield_impact","title":"yield_impact — yield_impact","text":"integrate workflow together","code":""},{"path":"/reference/yield_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"yield_impact — yield_impact","text":"","code":"yield_impact(   pr_hist_ncdf = NULL,   pr_proj_ncdf = NULL,   tas_hist_ncdf = NULL,   tas_proj_ncdf = NULL,   timestep = \"monthly\",   historical_periods = NULL,   climate_hist_dir = NULL,   climate_impact_dir = NULL,   climate_model = \"gcm\",   climate_scenario = \"rcp\",   member = \"member\",   bias_adj = \"ba\",   cfe = \"no-cfe\",   gcam_version = \"gcam7\",   gcam_timestep = 5,   gcamdata_dir = NULL,   use_default_coeff = FALSE,   base_year = 2015,   start_year = NULL,   end_year = NULL,   smooth_window = 20,   co2_hist = NULL,   co2_proj = NULL,   diagnostics = TRUE,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/yield_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"yield_impact — yield_impact","text":"pr_hist_ncdf Default = NULL. List paths historical precipitation NetCDF files ISIMIP pr_proj_ncdf Default = NULL. List paths projected precipitation NetCDF files ISIMIP tas_hist_ncdf Default = NULL. List paths historical temperature NetCDF files ISIMIP tas_proj_ncdf Default = NULL. List paths projected temperature NetCDF files ISIMIP timestep Default = 'monthly'. String input climate data time step (e.g., 'monthly', 'daily') historical_periods Default = NULL. Vector years subset historical climate data. NULL, use default climate data period climate_hist_dir Default = NULL. String path historical precipitation temperature files irrigation type crop type. climate files must follow structure output weighted_climate function. Provide path argument pr_hist_ncdf tas_hist_ncdf NULL. climate_impact_dir Default = NULL. String path projected precipitation temperature files irrigation type crop type. climate files must follow structure output weighted_climate function. Provide path argument pr_proj_ncdf tas_proj_ncdf NULL. climate_model Default = 'gcm'. String climate model name (e.g., 'CanESM5') climate_scenario Default = 'rcp'. String climate scenario name (e.g., 'ssp245') member Default = 'member'. String ensemble member name bias_adj Default = 'ba'. String dataset used climate data bias adjustment cfe Default = '-cfe'. String whether yield impact formula implemented CO2 fertilization effect gcam_version Default = 'gcam7'. String GCAM version. support gcam6 gcam7 gcam_timestep Default = 5. Integer time step GCAM (Select either 1 5 years GCAM use) gcamdata_dir Default = NULL. String directory gcamdata folder within specific GCAM version. gcamdata need run drake CSV outputs beforehand. use_default_coeff Default = FALSE. Binary using default regression coefficients. Set TRUE use default coefficients instead calculating coefficients historical climate data. base_year Default = 2015. Integer base year (GCAM) start_year Default = NULL. Integer  start year projected data end_year Default = NULL. Integer end year projected data smooth_window Default = 20. Integer smoothing window years co2_hist Default = NULL. Data table historical CO2 concentration columns [year, co2_conc]. NULL, use built-CO2 emission data co2_proj Default = NULL. Data table projected CO2 concentration columns [year, co2_conc]. NULL, use built-CO2 emission data diagnostics Default = TRUE. Logical performing diagnostic plot output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/yield_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"yield_impact — yield_impact","text":"data frame formatted agricultural productivity change GCAM","code":""},{"path":"/reference/yield_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"yield_regression — yield_regression","title":"yield_regression — yield_regression","text":"Yield regressions create figures using average growing season temperature precipitation, max min months","code":""},{"path":"/reference/yield_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"yield_regression — yield_regression","text":"","code":"yield_regression(   formula = NULL,   diagnostics = TRUE,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/yield_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"yield_regression — yield_regression","text":"formula Default = NULL. String regression formula diagnostics Default = TRUE. Logical performing diagnostic plot output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/yield_shock_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"yield_shock_projection — yield_shock_projection","title":"yield_shock_projection — yield_shock_projection","text":"Project yields future climate scenarios using regression analysis Using average growing season temperature precipitation, max min months","code":""},{"path":"/reference/yield_shock_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"yield_shock_projection — yield_shock_projection","text":"","code":"yield_shock_projection(   use_default_coeff = FALSE,   climate_model = \"gcm\",   climate_scenario = \"rcp\",   base_year = 2015,   start_year = NULL,   end_year = NULL,   gcam_timestep = 5,   smooth_window = 20,   diagnostics = TRUE,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/yield_shock_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"yield_shock_projection — yield_shock_projection","text":"use_default_coeff Default = FALSE. Binary using default regression coefficients. Set TRUE use default coefficients instead calculating coefficients historical climate data. climate_model Default = NULL. String climate model (e.g., 'CanESM5') climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') base_year Default = 2015. Integer base year (GCAM) start_year Default = NULL. Integer  start year data end_year Default = NULL. Integer end year data gcam_timestep Default = 5. Integer time step GCAM (Select either 1 5 years GCAM use) smooth_window Default = 20. Integer smoothing window years diagnostics Default = TRUE. Logical performing diagnostic plot output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/yield_shock_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"yield_shock_projection — yield_shock_projection","text":"data frame formatted smoothed annual crop yield shocks climate impacts","code":""},{"path":"/reference/z_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"z_estimate — z_estimate","title":"z_estimate — z_estimate","text":"Estimate Z_t = ln(Y_t) w/o constants","code":""},{"path":"/reference/z_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"z_estimate — z_estimate","text":"","code":"z_estimate(   use_default_coeff = FALSE,   climate_model = NULL,   climate_scenario = NULL,   crop_name = NULL,   output_dir = file.path(getwd(), \"output\") )"},{"path":"/reference/z_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"z_estimate — z_estimate","text":"use_default_coeff Default = FALSE. Binary using default regression coefficients. Set TRUE use default coefficients instead calculating coefficients historical climate data. climate_model Default = NULL. String climate model name climate_scenario Default = NULL. String climate scenario (e.g., 'ssp245') crop_name Default = NULL. String crop name output_dir Default = file.path(getwd(), 'output'). String output directory","code":""},{"path":"/reference/z_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"z_estimate — z_estimate","text":"data frame variables regression model","code":""},{"path":"/news/index.html","id":"gaia-100","dir":"Changelog","previous_headings":"","what":"gaia 1.0.0","title":"gaia 1.0.0","text":"First release TBD","code":""}]
